<?xml version="1.0" encoding="UTF-8"?>

<!-- 
DispatcherServlet은 WEB-INF/ 디렉터리에 위치한 [Servlet이름]-servlet.xml 파일을 SPRING 설정 파일로 사용한다.
 -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.0.xsd">
<!-- 		
<context:component-scan base-package="madvirus.spring.chap06.controller" /> 
@Controller Annotation은 @Component Annotation과 마찬가지로 컴포넌트 스캔 대상이다. 
따라서 <context:component-scan>
태그를 이용해서 @Controller Annotation이 적용된 컨트롤러 Class를 자동으로 로딩할 수 있다.
이걸 쓰면 아래 <bean id=""> 이런걸 하나하나 설정하지 않아도 된다.
-->

	<!--  DispacherServlet은 이 뷰 이름과 매칭되는 뷰 구현체를 찾기 위해 ViewResolver를 사용  -->
	<!-- 컨트롤러의 처리 결과를 생성할 뷰를 결정한다. (결정자 : Resolver) -->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/view/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- 
	dispatcher-servlet.xml 설정 파일에 등록이 완료되면, 
	@RequestMapping Annotation의 값으로 설정한 URI와 매칭되는 클라이언트의 요청을
	해당 메서드에서 처리하게 된다.
	 -->
	<bean id="helloController" class="madvirus.spring.chap06.controller.HelloController" />
	
	<bean id = "newArticleController" class="madvirus.spring.chap06.controller.NewArticleController" 
		p:articleService-ref="articleService" />
		
	<bean id = "articleService" class="madvirus.spring.chap06.service.ArticleService" />
	
	<bean class="madvirus.spring.chap06.controller.OrderController" />
	
	<bean id = "searchController" class="madvirus.spring.chap06.controller.SearchController" />
	
	<bean id="cookieController" class="madvirus.spring.chap06.controller.CookieController" />
	
	<bean class="madvirus.spring.chap06.controller.HeaderController" />
	
	<bean id="searchService" class="madvirus.spring.chap06.service.SearchService" />
	
	<bean class="madvirus.spring.chap06.controller.GameSearchController" 
		p:searchService-ref="searchService" />
		
	<bean class="madvirus.spring.chap06.controller.CreateAccountController" />
	
	<bean class="madvirus.spring.chap06.controller.CharacterInfoController" />
	
	<bean class="madvirus.spring.chap06.controller.GameInfoController" />
	
	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
		<property name="alwaysUseFullPath" value="true" />
	</bean>
	
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="alwaysUseFullPath" value="true" />
	</bean>
	
	<!-- properties 설정하는 부분! src/messages/validation.properties -->
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
		<list>
			<value>messages.validation</value>
		</list>
		</property>
	</bean>	
	
	
		


	
	<bean id="authenticator" class="madvirus.spring.chap06.service.MockAuthenticator" 
		p:commonLogger-ref="commonLogger" />
	
	<bean class="madvirus.spring.chap06.controller.LoginController">
		<property name="authenticator" ref="authenticator" />
	</bean>
	
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	</bean>
	
	<bean class="madvirus.spring.chap06.controller.ReportSubmissionController" />
	
	<bean class="madvirus.spring.chap06.controller.QueryLogController" />
	
	<bean class="madvirus.spring.chap06.controller.EventController" />
		
	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
		<property name="alwaysUseFullPath" value="true" />
		<property name="interceptors">
			<list>
				<ref bean="eventExpirationCheckInterceptor" />
			</list>
		</property>
	</bean>
	
	<bean id="eventExpirationCheckInterceptor" class="madvirus.spring.chap06.interceptor.EventExpirationCheckInterceptor" />
	
	<bean class="madvirus.spring.chap06.controller.ArithmeticOperatorController" />
	
	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="java.lang.ArithmeticException">
					event/mathException
				</prop>
				<prop key="java.lang.Exception">
					event/exception
				</prop>
			</props>
		</property>	
	</bean>
	
</beans>